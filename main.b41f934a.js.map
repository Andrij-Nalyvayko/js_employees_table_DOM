{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tbody","sorting","name","position","office","age","salary","sortList","rows","column","sort","a","b","innerA","children","innerText","innerB","parseNum","localeCompare","sortColumns","toLowerCase","reverse","forEach","elem","append","par","result","char","includes","body","addEventListener","anEvent","list","querySelectorAll","target","isItHead","contains","isItBody","addActive","parentElement","map","classList","remove","className","tagName","insertAdjacentHTML","oldDate","savedTarget","form","notif","pushNotification","title","description","type","newNotif","createElement","innerHTML","setTimeout","e","preventDefault","newEmployee","FormData","Object","fromEntries","entries","length","newTr","option","newTd","lastChild","toLocaleString","isInput","getElementById","savedData","textContent","input","id","value","min","max","newData","oninput","asEvent","key","focus"],"mappings":"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","file":"main.b41f934a.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tbody = document.querySelector('tbody');\nconst sorting = {\n  name: false,\n  position: false,\n  office: false,\n  age: false,\n  salary: false,\n};\n\ndocument.body.addEventListener('click', anEvent => {\n  const list = [...tbody.querySelectorAll('tr')];\n  const target = anEvent.target;\n  const isItHead = table.children[0].contains(target);\n  const isItBody = table.children[1].contains(target);\n\n  if (isItHead) {\n    switch (target.innerText) {\n      case 'Name':\n        sorting.name = !sorting.name;\n        sortList(list, 0);\n        break;\n\n      case 'Position':\n        sorting.position = !sorting.position;\n        sortList(list, 1);\n        break;\n\n      case 'Office':\n        sorting.office = !sorting.office;\n        sortList(list, 2);\n        break;\n\n      case 'Age':\n        sorting.age = !sorting.age;\n        sortList(list, 3);\n        break;\n\n      case 'Salary':\n        sorting.salary = !sorting.salary;\n        sortList(list, 4);\n        break;\n    };\n  };\n\n  if (isItBody) {\n    const addActive = target.parentElement;\n\n    list.map(elem => elem.classList.remove('active'));\n    addActive.className = 'active';\n\n    if (addActive.parentElement.tagName !== 'TBODY') {\n      addActive.parentElement.className = 'active';\n    };\n  } else if (!isItBody && !isItHead) {\n    list.map(elem => elem.classList.remove('active'));\n  };\n});\n\nfunction sortList(rows, column) {\n  rows.sort((a, b) => {\n    const innerA = a.children[column].innerText;\n    const innerB = b.children[column].innerText;\n\n    if (parseNum(innerA)) {\n      return parseNum(innerB) - parseNum(innerA);\n    } else {\n      return innerB.localeCompare(innerA);\n    };\n  });\n\n  const sortColumns = table.children[0].children[0]\n    .children[column].innerText.toLowerCase();\n\n  if (sorting[sortColumns]) {\n    rows.reverse();\n  };\n\n  rows.forEach(elem => table.children[1].append(elem));\n};\n\nfunction parseNum(par) {\n  let result = '';\n\n  for (const char of par) {\n    if ('1234567890'.includes(char)) {\n      result += char;\n    };\n  };\n\n  return +result;\n};\n\ntable.insertAdjacentHTML('afterend', `\n<form class=\"new-employee-form\" action=\"#\" method=\"get\">\n  <label>Name:<input name=\"name\" type=\"text\" required></label>\n\n  <label>Position:<input name=\"position\" type=\"text\" required></label>\n\n  <label>\n    Office: \n    <select name=\"office\">\n      <option>Tokyo</option>\n      <option>Singapore</option>\n      <option>London</option>\n      <option>New York</option>\n      <option>Edinburgh</option>\n      <option>San Francisco</option>\n    </select>\n  </label>\n\n  <label>Age:<input name=\"age\" type=\"number\" required></label>\n\n  <label>Salary:<input name=\"salary\" type=\"number\" required></label>\n\n  <button type=\"submit\">Save to table</button>\n</form>`);\n\nconst form = document.querySelector('form');\nlet notif = true;\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  let newEmployee = new FormData(form);\n\n  newEmployee = Object.fromEntries(newEmployee.entries());\n\n  if (newEmployee.name.length < 4) {\n    if (notif) {\n      pushNotification('ERROR',\n        'Name must be longer than 4 letters', 'error');\n    };\n\n    return;\n  };\n\n  if (+newEmployee.age < 18 || +newEmployee.age > 90) {\n    if (notif) {\n      pushNotification('ERROR',\n        'Age must be between 18 and 90', 'error');\n    };\n\n    return;\n  };\n\n  const newTr = document.createElement('tr');\n\n  for (const option in newEmployee) {\n    const newTd = document.createElement('td');\n\n    newTd.append(newEmployee[option]);\n    newTr.append(newTd);\n  };\n\n  let salary = +newTr.lastChild.innerText;\n\n  salary = salary.toLocaleString('en-US');\n\n  newTr.lastChild.innerText = '$' + salary;\n\n  tbody.insertAdjacentHTML('beforeend', `${newTr.innerHTML}`);\n\n  if (notif) {\n    pushNotification('SUCCESS',\n      'New employee is successfully added to the table', 'success');\n  };\n\n  document.querySelector('button').type = 'reset';\n});\n\nfunction pushNotification(title, description, type) {\n  const newNotif = document.createElement('div');\n\n  newNotif.innerHTML = `\n    <h2 class='title'>${title}</h2>\n    <p>${description}</p>\n  `;\n\n  newNotif.className = (`notification ${type}`);\n  document.body.append(newNotif);\n  notif = false;\n\n  setTimeout(() => {\n    notif = true;\n\n    return newNotif.remove();\n  }, 3000);\n};\n\nlet oldDate;\nlet savedTarget;\n\ntbody.addEventListener('dblclick', (anEvent) => {\n  const isInput = document.getElementById('newData');\n  const target = anEvent.target;\n  const savedData = target.textContent;\n\n  if (isInput) {\n    isInput.remove();\n    savedTarget.textContent = oldDate;\n  };\n\n  oldDate = savedData;\n  savedTarget = target;\n\n  const input = document.createElement('input');\n\n  input.id = 'newData';\n\n  input.value = (savedData.includes('$'))\n    ? parseNum(savedData)\n    : savedData;\n\n  target.textContent = '';\n\n  input.type = (+savedData || savedData.includes('$'))\n    ? 'number'\n    : 'text';\n\n  if (input.type === 'number' && !savedData.includes('$')) {\n    input.min = '18';\n    input.max = '90';\n  };\n\n  input.className = 'cell-input';\n\n  let newData = savedData;\n\n  input.oninput = () => {\n    newData = input.value;\n  };\n\n  input.addEventListener('keydown', (asEvent) => {\n    if (asEvent.key === 'Enter') {\n      if (input.type === 'text' && !savedData.includes('$')) {\n        target.textContent = newData.length < 1\n          ? savedData\n          : newData;\n      } else if ((newData < 18 || newData > 90)\n      && !savedData.includes('$')) {\n        if (notif) {\n          pushNotification('ERROR',\n            'Age must be between 18 and 90', 'error');\n        };\n\n        target.textContent = savedData;\n      } else if (oldDate.includes('$')) {\n        if (!newData) {\n          target.textContent = savedData;\n        } else {\n          newData = parseNum(newData);\n          newData = '$' + newData.toLocaleString('en-US');\n          target.textContent = newData;\n        };\n      } else {\n        target.textContent = newData;\n      };\n    };\n  });\n\n  target.append(input);\n\n  document.addEventListener('click', (e) => {\n    const targ = e.target;\n    const inp = document.querySelector('.cell-input');\n\n    if (targ === inp) {\n      return;\n    };\n\n    target.textContent = newData.length < 1\n      ? savedData\n      : newData;\n  });\n\n  input.focus();\n});\n"]}